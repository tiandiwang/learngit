1. 现实世界-->信息化需求-->OO信息世界
     |            |             |
	用户   -->系统分析员--> OO开发人员
     |            |             |
   非OO文件-->   UML    -->   OO文件
     |            |             |
   具体事物-->抽象、映射-->  软件对象
   
2. UML是一种语言，是一种从现实世界到OO信息世界的分析语言。UML语言背后的理论支撑是OO思想，也就是说系统分析员必须以OO的思维方式来分析现实世界。

3. 现实世界沟通中存在高度不确定性，主要表现：1. 人与人沟通，本来就会产生误解 2. 人脑并非计算机，总有多多少少遗漏 3. 反复沟通，会面临变更需求。
   UML无法根治这些本质性的问题，但还是可以应对：1. 以UML图引导访谈，降低遗漏 2. 快速生成程序片段，降低误解 3. 封装变化，把变更控制在最新范围内。

4. MDA软件工程，MDA主要规定了程序开发及将要生成的UML图分为三个阶段：
   （1）CIM --聚焦于企业组织的业务和系统环境、需求，但不涉及系统需求的内部结构与运作。
   （2）PIM --聚焦于系统需求内部机构与运作，但不涉及系统内部结构和运作的实现机制（实现平台、语言）。
   （3）PSM --聚焦于系统落实于特定具体平台的细节语言。
    本文档采用MDA的具体分析步骤：
   （1）CIM-1 --定义业务流程，产生业务用例图、业务用例简述word文档。
   （2）CIM-2 --分析业务流程，产生业务用例活动图
   （3）CIM-3 --定义系统范围，产生系统用例图   
   （4）PIM-1 --分析系统流程，产生系统用例叙述
   （5）PIM-2 --分析业务规则，产生状态图
   （6）PIM-3 --定义静态结构，产生类图
   （7）PIM-4 --定义操作方法，产生时序图
   
 5. CIM阶段，系统开发初期，大约1~2周时间了解企业组织业务、确定系统范围。
 
    一般企业组织肯定是向企业外部提供服务的，也就是说企业组织外部的人或物来企业办业务才引发了企业的一系列业务流程。
    业务执行者：    位于企业组织外，但会启动或参与业务流程的人或物。边界是企业组织。
	业务用例：      每一个业务用例代表一条业务流程，也就是说一个企业外的人来企业办理一件完整的事，这个业务流程可能跨多个人、多个部门，很长时间才能完成，以达到业务执行者的一个目的。
	业务用例简述：  简单介绍业务用例是干什么的，主要用来记录和区分业务流程的。
	业务用例活动图：描述每一个业务用例中业务执行者和业务工人的一连串工作活动。在活动图中，以流程起点开始，然后遵循活动的方向依次列出各项活动（不应存在交互情景），最终进入目的终点。
	                分析业务流程的目的是定义出系统用例，所以这个工作活动一般指在这个业务流程内业务工人做了什么，然后又做了什么，而没必要说出是怎么做的。
					每个人切分工作活动的粒度不同，所以造成不同的系统分析员分析出的流程细节也不同。
					通常情况下我们应站在业务工人的角度以时间、地点、人物、手工、信息化来作为划分工作活动的依据，一个人连续执行的动作称为一个活动。
    
    系统启动者：    位于系统外，但会直接启动或操作计算机的人或物。边界从企业组织缩小到了软件系统。原来的业务工人都处于系统之外，成为了启动者。
	系统用例：      业务用例活动图中每一个活动都可能称为系统用例，系统用例是以达到业务工人的一个目的，视角从业务执行者转换到了业务工人。
    系统用例简述：  简单介绍系统用例是干什么的，主要用来记录和区分系统用例的。
	
	举例：
	业务用例：      借阅图书业务用例，边界是图书馆。拥有借书证的人去图书馆借阅图书，那么就会引发图书馆的一条业务流程，借书人拥有一个借阅图书的目的。
	                这个业务流程只和一个业务工人打交道，现在模拟下借阅所经历的活动：
					（1）借书人出示借书证
					（2）图书管理员确认借书证有效
					（3）借书人查找要借阅的图书
					（4）图书管理员办理借阅手续
					（5）借书人完成借阅目的
                    患者就医业务用例，边界是医院。患者到医院就诊，那么会引发医院的一条业务流程，患者拥有一个就诊看病的目的。
					这个业务流程将跨越多个部门和多个业务工人打交道，现在模拟下患者就诊所经历的活动：
					（1）如果患者是初次就诊那么需要办理一张就诊卡，有了就诊卡就可以进行挂号......等一系列后续活动
					（2）患者出示就诊卡
					（3）挂号员利用就诊卡进行挂号
					（4）挂号员开具挂号单据
					（5）患者拿着挂号单据到挂号的科室就诊
					（6) 医生询问病情并开具诊断
					（7）医生开具辅助检查或开具处方
					（8）患者拿着辅助检查单或处方到收费处缴费
					（9）收费员按辅助检查单或处方进行收费
					（10）收费员开具收费单据
					（11）患者拿着收费单到辅助科室检查
					（12）辅助科室按照检查单进行检查
					（13）辅助科室打印检查报告
					（14）患者拿着收费单到药房拿药
					（15）药剂师对患者进行发药
					（16）患者拿到药完成就诊目的
	
	系统用例：       借阅图书系统用例，边界从图书馆转向了借阅系统。视角从借阅者转向了图书管理员。
	                 从上述借阅图书的业务用例的活动中，我们发现图书管理员有两个活动，一个是确认借书证是否有效，另一个活动是办理借阅手续，
					 那么 ①确认借书证 ②办理借阅手续两个活动是两个系统用例 还是就 ”办理借阅“ 一个系统用例呢？我认为应该是”办理借阅“一个系统用例，而 ①确认借书证 ②办理借阅手续 
					 是“办理借阅”的两个精化用例或叫包含用例，粒度更小。图书管理员的一个目的就是为借书人办理借阅，而①确认借书证或②办理借阅手续 都不能构成图书管理员的一个目的。
					 
					 患者就医业务用例跨越了多个部门、多个人。边界从医院转向了HIS系统。视角从患者转向了医院工作人员，包括挂号员、医生、收费员、检查员、药剂师等。
					 从上述患者就医的业务活动中，我们发现：
					 针对挂号员的活动有①办理就诊卡②挂号③开具挂号单据三个活动，那么这三个活动能构成挂号员的三个目的吗？
					                   我认为可以，因为挂号员可以单独为患者办理一张就诊卡，如果患者有就诊卡，挂号员也可以单独进行挂号，挂号单丢失后也可以单独进行开具，
									   因此可以作为挂号员的三个目的也就是三个系统用例。
					 针对医生的活动有  ①医生开具诊断②医生开具辅助检查单③医生开具处方单三个活动，那么这三个活动能构成医生的三个目的吗？
					                   我认为开具诊断不能作为一个目的，开具诊断的目的是为了开处方，因此它只是一个开处方的一个精化用例或包含用例，而开具辅助检查的和开具处方单
									   可以作为两个目的单独存在，因此医生只有开具辅助检查单和开具处方单两个系统用例。
					 针对收费员的活动有①辅助检查单或处方收费②开具收费单据，这两个可以构成收费员的两个目的。收费员的目的就是收费、开收据并可以单独存在，哈哈！
					 针对检查员的活动有①辅助科室检查②打印检查报告，这两个可以构成检查员的两个目的。检查员的目的就是检查、打印报告并可以单独存在，哈哈！
					 针对药剂师的活动有①药剂师发药这个毋庸置疑是药剂师的工作，也就是他的一个目的，因此药剂师发药就是一个系统用例。
					 
					 系统用例完成一个执行者的一个完整目的，我认为这里基本上可以把这个系统用例看做一个界面（系统用例  --> 窗口界面），而这个系统用例的精化或包含用例是操作这个界面的步骤。
					
	用例图建议：     用例图中慎用用例之间的关系，包含用例常可以理解，扩展和泛化最好慎用。因为用例图是UML中沟通的工具，①它向外连接着客户，扩展和泛化的用例关系根本不可能期望客户理解，
	                 增加了沟通成本，还会把用例切割的七零八散，还会让用例图很难理解。②它向内连接着开发人员，这时你可以适当利用包含、扩展和泛化用例关系，但这是另一个版本的用例图，哈哈！
                             				 
6. PIM阶段，系统开发中期，将会投入更多时间来做系统分析，相当于系统的概要设计。
    
    系统分析员将全部的系统用例依据相关性分成若干组（一期、二期），然后按照组别进行PIM-1~PIM-4的产生结果，随后交给开发人员进行设计、编码、测试。
    用例叙述：只要用例图是不够的，还需要搭配用例叙述。用例叙述用文字记录业务人员现行的执行步骤，描述参与者与系统之间应该如何交互才能达到目的。
	
	                 用例叙述和数据字段的关系：    这里的交互是指执行步骤，只涉及代表执行步骤的关键数据，不涉及其它数据字段信息。因为系统分析师是用用例叙述来记录需求的，
			                                       而不是用它来记录设计细节的，所以用例叙述千万别写的过于细腻和复杂，而只写执行步骤这个需求就可以了。
			         用例叙述和界面使用说明的关系：这里仍是以交互为主要区别点，界面使用说明中，用户需要说明在系统中先操作什么，再操作什么。有时候Actor操作一步，系统并不反馈，
					                               使用说明中仍要把这步操作描述出来。而交互指Actor在系统中做什么，系统反馈什么，用例叙述只写出有交互的片段，没有交互的操作不用写出来。
					 用例叙述和界面的关系：		   用例叙述不可能完全脱离界面，界面包括信息结构（布局）和信息交互两部分，用例叙述只描述信息交互而不描述信息结构。      	

	举例：    订购书籍用例叙述
	          事件流程
			  （1）当Actor选择订购书籍时，用例启动；--用例开始
			  （2）Actor输入预购买书籍的书号；--能代表执行步骤的关键数据
			  （3）系统显示书籍简介和售价；
			  （4）Actor把书籍加入购物车；
			  （5）系统购物车累加书籍金额；
			  （6）Actor对购物车书籍进行结算；
			  （7）系统显示购买书籍总金额、收货信息、付款信息；--这里收货信息、付款信息是替代流程
			  （8）Actor确认交易信息；
			  （9）系统核对信息，保存订购信息，返回交易码；
			  （10）Actor选择是否打印交易凭证，用例终止；--用例结束
	

